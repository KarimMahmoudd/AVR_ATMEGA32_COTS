Archive member included because of file (symbol)

e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./USART_program.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_program.o
LOAD ./PORT_program.o
LOAD ./USART_program.o
LOAD ./main.o
LOAD e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x9de
 *(.vectors)
 .vectors       0x00000000       0x54 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_1
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_11
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_8
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./DIO_program.o
 .text          0x0000007c        0x0 ./PORT_program.o
 .text          0x0000007c        0x0 ./USART_program.o
 .text          0x0000007c        0x0 ./main.o
 .text          0x0000007c        0x0 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_u8SetPinValue
                0x0000007c      0x224 ./DIO_program.o
                0x0000007c                DIO_u8SetPinValue
 .text.DIO_u8SetPortValue
                0x000002a0       0x90 ./DIO_program.o
                0x000002a0                DIO_u8SetPortValue
 .text.DIO_u8GetPinValue
                0x00000330      0x130 ./DIO_program.o
                0x00000330                DIO_u8GetPinValue
 .text.DIO_u8GetPortValue
                0x00000460       0xa4 ./DIO_program.o
                0x00000460                DIO_u8GetPortValue
 .text.DIO_u8TogglePinValue
                0x00000504      0x116 ./DIO_program.o
                0x00000504                DIO_u8TogglePinValue
 .text.PORT_voidInit
                0x0000061a       0x42 ./PORT_program.o
                0x0000061a                PORT_voidInit
 .text.USART_voidInit
                0x0000065c       0xbe ./USART_program.o
                0x0000065c                USART_voidInit
 .text.USART_u8SynchSend
                0x0000071a       0xa4 ./USART_program.o
                0x0000071a                USART_u8SynchSend
 .text.USART_u8SynchReceive
                0x000007be       0xa8 ./USART_program.o
                0x000007be                USART_u8SynchReceive
 .text.USART_voidAsynchSend
                0x00000866       0x32 ./USART_program.o
                0x00000866                USART_voidAsynchSend
 .text.USART_u8AsynchReceive
                0x00000898       0x48 ./USART_program.o
                0x00000898                USART_u8AsynchReceive
 .text.__vector_13
                0x000008e0       0x4e ./USART_program.o
                0x000008e0                __vector_13
 .text.__vector_14
                0x0000092e       0x3e ./USART_program.o
                0x0000092e                __vector_14
 .text.__vector_15
                0x0000096c       0x20 ./USART_program.o
                0x0000096c                __vector_15
 .text.main     0x0000098c       0x4e ./main.o
                0x0000098c                main
 .text.libgcc   0x000009da        0x0 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000009da        0x0 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000009da                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000009da        0x0 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000009da                exit
                0x000009da                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000009da        0x4 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000009de                _etext = .

.data           0x00800060        0x0 load address 0x000009de
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_program.o
 .data          0x00800060        0x0 ./PORT_program.o
 .data          0x00800060        0x0 ./USART_program.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x4
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./DIO_program.o
 .bss           0x00800060        0x0 ./PORT_program.o
 .bss           0x00800060        0x0 ./USART_program.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 e:/embedded_systems/00_imt_avr_diploma/00-tools/01-imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.USART_u16TransmittedData
                0x00800060        0x2 ./USART_program.o
 .bss.USART_pu16ReceivedData
                0x00800062        0x2 ./USART_program.o
 *(COMMON)
                0x00800064                PROVIDE (__bss_end, .)
                0x000009de                __data_load_start = LOADADDR (.data)
                0x000009de                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800064        0x0
                0x00800064                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800064                PROVIDE (__noinit_end, .)
                0x00800064                _end = .
                0x00800064                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xe04
 *(.stab)
 .stab          0x00000000      0x5f4 ./DIO_program.o
 .stab          0x000005f4      0x168 ./PORT_program.o
                                0x1ec (size before relaxing)
 .stab          0x0000075c      0x528 ./USART_program.o
                                0x5ac (size before relaxing)
 .stab          0x00000c84      0x180 ./main.o
                                0x204 (size before relaxing)

.stabstr        0x00000000      0x5e1
 *(.stabstr)
 .stabstr       0x00000000      0x5e1 ./DIO_program.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(USART.elf elf32-avr)
LOAD linker stubs
